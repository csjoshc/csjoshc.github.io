"use strict";(self.webpackChunkdocusaurus_temp=self.webpackChunkdocusaurus_temp||[]).push([[7088],{3286:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/Figure_2-c4910465003bc7ccb6cdd80900e842fb.png"},5053:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/Figure_1-48027ed59f2f4bb9d3d03e873c58ee7a.png"},7778:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"Python/IntroCompThinkDataSci/unit4/ps4","title":"ps4","description":"\ud83c\udfe0 Home","source":"@site/docs/Python/IntroCompThinkDataSci/unit4/ps4.md","sourceDirName":"Python/IntroCompThinkDataSci/unit4","slug":"/Python/IntroCompThinkDataSci/unit4/ps4","permalink":"/docs/Python/IntroCompThinkDataSci/unit4/ps4","draft":false,"unlisted":false,"editUrl":"https://github.com/csjoshc/csjoshc.github.io/tree/main/docs/Python/IntroCompThinkDataSci/unit4/ps4.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Experimental Data and Modeling","permalink":"/docs/Python/IntroCompThinkDataSci/unit4/"},"next":{"title":"unit5","permalink":"/docs/Python/IntroCompThinkDataSci/unit5/"}}');var a=t(4848),o=t(8453);const s={},i="Fitting and evaluating linear models",d={},l=[{value:"Results for single date model",id:"results-for-single-date-model",level:2},{value:"Results for averaged yearly data",id:"results-for-averaged-yearly-data",level:2},{value:"Code",id:"code",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",img:"img",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"\ud83c\udfe0 Home\n\ud83d\udc0d Python"}),"\n",(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"fitting-and-evaluating-linear-models",children:"Fitting and evaluating linear models"})}),"\n",(0,a.jsx)(n.p,{children:"This problem set had me write functions to generate various linear models of various degrees, evaluate based on R squared and plot the results. These are the results, training a regression line of temperature vs year based on a single yearly date (Jan 10) as representative data, or the entire averaged yearly data."}),"\n",(0,a.jsx)(n.h2,{id:"results-for-single-date-model",children:"Results for single date model"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{src:t(5053).A+"",width:"640",height:"478"})}),"\n",(0,a.jsx)(n.h2,{id:"results-for-averaged-yearly-data",children:"Results for averaged yearly data"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{src:t(3286).A+"",width:"640",height:"478"})}),"\n",(0,a.jsx)(n.h2,{id:"code",children:"Code"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"def generate_models(x, y, degs):\n    my_models = [None] * len(degs)\n    for index, degree in enumerate(degs):\n        my_models[index] = np.polyfit(x, y, degree)\n    return my_models\ndef r_squared(y, estimated):\n    mean = sum(y)/len(y)\n    return 1 - sum((y[i] - estimated[i])**2 for i in range(len(y))) /\\\n        sum((y[i] - mean)**2 for i in range(len(y)))\ndef evaluate_models_on_training(x, y, models):\n    plt.plot(x , y, '.', color='blue')\n    plt.ylabel('Temperature')\n    plt.xlabel('Year')\n    plt.title('Temperature vs Year')\n    for model in models:\n        # y_pred = [sum(coeff * x_val ** power for power, coeff in enumerate(model)) for x_val in x]\n        y_pred = np.polyval(model, x)\n        r_2 = r_squared(y, y_pred)\n        plt.plot(x, y_pred, '-', color='red', \\\n        label = 'Fit of degree '\\\n            + str(len(model) - 1)\\\n                +', R2 = ' + str(round(r_2, 5)))\n    plt.legend()\n    plt.show()\n"})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>i});var r=t(6540);const a={},o=r.createContext(a);function s(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);