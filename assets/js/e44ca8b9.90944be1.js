"use strict";(self.webpackChunkdocusaurus_temp=self.webpackChunkdocusaurus_temp||[]).push([[3103],{5108:(n,e,d)=>{d.r(e),d.d(e,{assets:()=>c,contentTitle:()=>l,default:()=>x,frontMatter:()=>t,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"Python/PythonforDataScience/Pandas3","title":"Pandas3","description":"\ud83c\udfe0 Home","source":"@site/docs/Python/PythonforDataScience/4_Pandas3.md","sourceDirName":"Python/PythonforDataScience","slug":"/Python/PythonforDataScience/Pandas3","permalink":"/docs/Python/PythonforDataScience/Pandas3","draft":false,"unlisted":false,"editUrl":"https://github.com/csjoshc/csjoshc.github.io/tree/main/docs/Python/PythonforDataScience/4_Pandas3.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Pandas2","permalink":"/docs/Python/PythonforDataScience/Pandas2"},"next":{"title":"Pandas4","permalink":"/docs/Python/PythonforDataScience/Pandas4"}}');var i=d(4848),r=d(8453);const t={},l="Dataframes - Subsetting & Cleaning",c={},h=[{value:"Copy dataframe",id:"copy-dataframe",level:2},{value:"Dataframe inspection and cleaning",id:"dataframe-inspection-and-cleaning",level:2},{value:"Filling, Replacing, Imputations",id:"filling-replacing-imputations",level:2},{value:"Data Operations - Slicing",id:"data-operations---slicing",level:2},{value:"Subset rows",id:"subset-rows",level:3},{value:"Frequency table",id:"frequency-table",level:3},{value:"Create derived variable column",id:"create-derived-variable-column",level:3},{value:"Add row by index location",id:"add-row-by-index-location",level:3},{value:"Drop row by index location",id:"drop-row-by-index-location",level:3},{value:"Drop column - <strong>del</strong>",id:"drop-column---del",level:3}];function a(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.p,{children:"\ud83c\udfe0 Home\n\ud83d\udc0d Python"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"\nprint(sys.executable)\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"\nInteractiveShell.colors = \"Linux\"\nInteractiveShell.separate_in = 0\n\nimport matplotlib.pyplot as plt\nimport os, sys\nos.chdir(sys.path[0]) # Change dir to the folder this .ipynb file is in\nprint(os.listdir('../../../../data/w4pd'))\nmovies = pd.read_csv('../../../../data/w4pd/movies.csv')\ntags = pd.read_csv('../../../../data/w4pd/tags.csv')\nratings = pd.read_csv('../../../../data/w4pd/ratings.csv')\n"})}),"\n",(0,i.jsx)(e.p,{children:"/home/jcmint/anaconda3/envs/learningenv/bin/python\n['genome-scores.csv', 'genome-tags.csv', 'Icon\\r', 'links.csv', 'movies.csv', 'ratings.csv', 'README.txt', 'tags.csv']"}),"\n",(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"dataframes---subsetting--cleaning",children:"Dataframes - Subsetting & Cleaning"})}),"\n",(0,i.jsx)(e.h2,{id:"copy-dataframe",children:"Copy dataframe"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Code:"})," ",(0,i.jsx)(e.code,{children:"df.copy()"}),"\nCertain ways of indexing will return a reference to the original object instead of a copy of an object. To make this explicit use ",(0,i.jsx)(e.code,{children:".copy()"})," when subsetting a df."]}),"\n",(0,i.jsx)(e.h2,{id:"dataframe-inspection-and-cleaning",children:"Dataframe inspection and cleaning"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Code:"})," ",(0,i.jsx)(e.code,{children:"df.shape, df.isnull().any(), df.dropna()"})]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Find the shape"}),"\n",(0,i.jsx)(e.li,{children:"Test if any values in each column are NA"}),"\n",(0,i.jsx)(e.li,{children:"Drop ROWS with null values."}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"print(ratings.shape)\nprint(ratings.isnull().any())\n"})}),"\n",(0,i.jsx)(e.p,{children:"(20000263, 4)"}),"\n",(0,i.jsx)(e.p,{children:"dtype: bool"}),"\n",(0,i.jsx)(e.h2,{id:"filling-replacing-imputations",children:"Filling, Replacing, Imputations"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"Forward filling - take prior values to fill forward into missing values"}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.code,{children:"df.fillna(method = 'ffill')"})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"Backward filling"}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.code,{children:"df.fillna(method = 'backfill')"})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"Replace one value with another"}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.code,{children:"df = pd.replace(9999, 0)"})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"Replace 9999 with 0"}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.code,{children:"df.dropna(axis = 0)"})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"default 0 drops rows"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"Linear interpolation (numeric)"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"fill in missing values based on averaging the value before and after"}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"df.interpolate()"})}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"data-operations---slicing",children:"Data Operations - Slicing"}),"\n",(0,i.jsx)(e.h3,{id:"subset-rows",children:"Subset rows"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"first_df = ratings[1:5]\nlast_df = ratings[-5:]\nfirst_df\nlast_df\n"})}),"\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{}),(0,i.jsx)(e.th,{children:"userId"}),(0,i.jsx)(e.th,{children:"movieId"}),(0,i.jsx)(e.th,{children:"rating"}),(0,i.jsx)(e.th,{children:"timestamp"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"1"}),(0,i.jsx)(e.td,{children:"1"}),(0,i.jsx)(e.td,{children:"29"}),(0,i.jsx)(e.td,{children:"3.5"}),(0,i.jsx)(e.td,{children:"1112484676"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"2"}),(0,i.jsx)(e.td,{children:"1"}),(0,i.jsx)(e.td,{children:"32"}),(0,i.jsx)(e.td,{children:"3.5"}),(0,i.jsx)(e.td,{children:"1112484819"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"3"}),(0,i.jsx)(e.td,{children:"1"}),(0,i.jsx)(e.td,{children:"47"}),(0,i.jsx)(e.td,{children:"3.5"}),(0,i.jsx)(e.td,{children:"1112484727"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"4"}),(0,i.jsx)(e.td,{children:"1"}),(0,i.jsx)(e.td,{children:"50"}),(0,i.jsx)(e.td,{children:"3.5"}),(0,i.jsx)(e.td,{children:"1112484580"})]})]})]}),"\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{}),(0,i.jsx)(e.th,{children:"userId"}),(0,i.jsx)(e.th,{children:"movieId"}),(0,i.jsx)(e.th,{children:"rating"}),(0,i.jsx)(e.th,{children:"timestamp"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"20000258"}),(0,i.jsx)(e.td,{children:"138493"}),(0,i.jsx)(e.td,{children:"68954"}),(0,i.jsx)(e.td,{children:"4.5"}),(0,i.jsx)(e.td,{children:"1258126920"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"20000259"}),(0,i.jsx)(e.td,{children:"138493"}),(0,i.jsx)(e.td,{children:"69526"}),(0,i.jsx)(e.td,{children:"4.5"}),(0,i.jsx)(e.td,{children:"1259865108"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"20000260"}),(0,i.jsx)(e.td,{children:"138493"}),(0,i.jsx)(e.td,{children:"69644"}),(0,i.jsx)(e.td,{children:"3.0"}),(0,i.jsx)(e.td,{children:"1260209457"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"20000261"}),(0,i.jsx)(e.td,{children:"138493"}),(0,i.jsx)(e.td,{children:"70286"}),(0,i.jsx)(e.td,{children:"5.0"}),(0,i.jsx)(e.td,{children:"1258126944"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"20000262"}),(0,i.jsx)(e.td,{children:"138493"}),(0,i.jsx)(e.td,{children:"71619"}),(0,i.jsx)(e.td,{children:"2.5"}),(0,i.jsx)(e.td,{children:"1255811136"})]})]})]}),"\n",(0,i.jsx)(e.h3,{id:"frequency-table",children:"Frequency table"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Code:"})," ",(0,i.jsx)(e.code,{children:"df.value_counts()"}),"\nOne column frequency table."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"ratings['rating'].value_counts()\n"})}),"\n",(0,i.jsx)(e.p,{children:"4.0    5561926\n3.0    4291193\n5.0    2898660\n3.5    2200156\n4.5    1534824\n2.0    1430997\n2.5     883398\n1.0     680732\n1.5     279252\n0.5     239125\nName: rating, dtype: int64"}),"\n",(0,i.jsx)(e.h3,{id:"create-derived-variable-column",children:"Create derived variable column"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"first_df['normalized'] = first_df['rating']/5\nfirst_df[['rating', 'normalized']]\n"})}),"\n",(0,i.jsx)(e.p,{children:"/home/jcmint/anaconda3/envs/learningenv/lib/python3.7/site-packages/ipykernel_launcher.py:1: SettingWithCopyWarning:\nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead"}),"\n",(0,i.jsxs)(e.p,{children:["See the caveats in the documentation: ",(0,i.jsx)(e.a,{href:"http://pandas.pydata.org/pandas-docs/stable/indexing.md#indexing-view-versus-copy",children:"http://pandas.pydata.org/pandas-docs/stable/indexing.md#indexing-view-versus-copy"}),'\n"""Entry point for launching an IPython kernel.']}),"\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{}),(0,i.jsx)(e.th,{children:"rating"}),(0,i.jsx)(e.th,{children:"normalized"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"1"}),(0,i.jsx)(e.td,{children:"3.5"}),(0,i.jsx)(e.td,{children:"0.7"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"2"}),(0,i.jsx)(e.td,{children:"3.5"}),(0,i.jsx)(e.td,{children:"0.7"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"3"}),(0,i.jsx)(e.td,{children:"3.5"}),(0,i.jsx)(e.td,{children:"0.7"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"4"}),(0,i.jsx)(e.td,{children:"3.5"}),(0,i.jsx)(e.td,{children:"0.7"})]})]})]}),"\n",(0,i.jsx)(e.h3,{id:"add-row-by-index-location",children:"Add row by index location"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'first_df.loc[3] = ["test", "test2", "test3", False, True]\nfirst_df\n'})}),"\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{}),(0,i.jsx)(e.th,{children:"userId"}),(0,i.jsx)(e.th,{children:"movieId"}),(0,i.jsx)(e.th,{children:"rating"}),(0,i.jsx)(e.th,{children:"timestamp"}),(0,i.jsx)(e.th,{children:"normalized"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"1"}),(0,i.jsx)(e.td,{children:"1"}),(0,i.jsx)(e.td,{children:"29"}),(0,i.jsx)(e.td,{children:"3.5"}),(0,i.jsx)(e.td,{children:"1112484676"}),(0,i.jsx)(e.td,{children:"0.7"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"2"}),(0,i.jsx)(e.td,{children:"1"}),(0,i.jsx)(e.td,{children:"32"}),(0,i.jsx)(e.td,{children:"3.5"}),(0,i.jsx)(e.td,{children:"1112484819"}),(0,i.jsx)(e.td,{children:"0.7"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"3"}),(0,i.jsx)(e.td,{children:"test"}),(0,i.jsx)(e.td,{children:"test2"}),(0,i.jsx)(e.td,{children:"test3"}),(0,i.jsx)(e.td,{children:"False"}),(0,i.jsx)(e.td,{children:"True"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"4"}),(0,i.jsx)(e.td,{children:"1"}),(0,i.jsx)(e.td,{children:"50"}),(0,i.jsx)(e.td,{children:"3.5"}),(0,i.jsx)(e.td,{children:"1112484580"}),(0,i.jsx)(e.td,{children:"0.7"})]})]})]}),"\n",(0,i.jsx)(e.h3,{id:"drop-row-by-index-location",children:"Drop row by index location"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"first_df = first_df.drop(3)\nfirst_df\n"})}),"\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{}),(0,i.jsx)(e.th,{children:"userId"}),(0,i.jsx)(e.th,{children:"movieId"}),(0,i.jsx)(e.th,{children:"rating"}),(0,i.jsx)(e.th,{children:"timestamp"}),(0,i.jsx)(e.th,{children:"normalized"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"1"}),(0,i.jsx)(e.td,{children:"1"}),(0,i.jsx)(e.td,{children:"29"}),(0,i.jsx)(e.td,{children:"3.5"}),(0,i.jsx)(e.td,{children:"1112484676"}),(0,i.jsx)(e.td,{children:"0.7"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"2"}),(0,i.jsx)(e.td,{children:"1"}),(0,i.jsx)(e.td,{children:"32"}),(0,i.jsx)(e.td,{children:"3.5"}),(0,i.jsx)(e.td,{children:"1112484819"}),(0,i.jsx)(e.td,{children:"0.7"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"4"}),(0,i.jsx)(e.td,{children:"1"}),(0,i.jsx)(e.td,{children:"50"}),(0,i.jsx)(e.td,{children:"3.5"}),(0,i.jsx)(e.td,{children:"1112484580"}),(0,i.jsx)(e.td,{children:"0.7"})]})]})]}),"\n",(0,i.jsxs)(e.h3,{id:"drop-column---del",children:["Drop column - ",(0,i.jsx)(e.strong,{children:"del"})]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"del first_df['timestamp']\nfirst_df\n"})}),"\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{}),(0,i.jsx)(e.th,{children:"userId"}),(0,i.jsx)(e.th,{children:"movieId"}),(0,i.jsx)(e.th,{children:"rating"}),(0,i.jsx)(e.th,{children:"normalized"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"1"}),(0,i.jsx)(e.td,{children:"1"}),(0,i.jsx)(e.td,{children:"29"}),(0,i.jsx)(e.td,{children:"3.5"}),(0,i.jsx)(e.td,{children:"0.7"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"2"}),(0,i.jsx)(e.td,{children:"1"}),(0,i.jsx)(e.td,{children:"32"}),(0,i.jsx)(e.td,{children:"3.5"}),(0,i.jsx)(e.td,{children:"0.7"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"4"}),(0,i.jsx)(e.td,{children:"1"}),(0,i.jsx)(e.td,{children:"50"}),(0,i.jsx)(e.td,{children:"3.5"}),(0,i.jsx)(e.td,{children:"0.7"})]})]})]})]})}function x(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(a,{...n})}):a(n)}},8453:(n,e,d)=>{d.d(e,{R:()=>t,x:()=>l});var s=d(6540);const i={},r=s.createContext(i);function t(n){const e=s.useContext(r);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:t(n.components),s.createElement(r.Provider,{value:e},n.children)}}}]);