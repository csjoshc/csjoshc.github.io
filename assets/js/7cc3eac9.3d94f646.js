"use strict";(self.webpackChunkdocusaurus_temp=self.webpackChunkdocusaurus_temp||[]).push([[6849],{3119:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>u,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"Github/bugs_gh","title":"bugs_gh","description":"\ud83c\udfe0 Home","source":"@site/docs/Github/bugs_gh.md","sourceDirName":"Github","slug":"/Github/bugs_gh","permalink":"/docs/Github/bugs_gh","draft":false,"unlisted":false,"editUrl":"https://github.com/csjoshc/csjoshc.github.io/tree/main/docs/Github/bugs_gh.md","tags":[],"version":"current","frontMatter":{}}');var o=n(4848),r=n(8453);const u={},i="Some bugs encountered using github",c={},a=[];function h(e){const t={h1:"h1",header:"header",p:"p",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"\ud83c\udfe0 Home\n\ud83d\udc19 Github"}),"\n",(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"some-bugs-encountered-using-github",children:"Some bugs encountered using github"})}),"\n",(0,o.jsx)(t.p,{children:"Using the insert/update Markdown TOC in VScode will cause a lot of bugs when used with checking out to different branches/commit/push, for whatever reason. Conflict markers end up getting inserted, and I end up having to delete the entire local directory and clone rep remote-url all over again. Already did this twice.\nMy thoughts on this are that a well designed web page probably shouldn't have or need a table of contents anyways - just break down topics into more modular pages and link to them where necessary."})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>u,x:()=>i});var s=n(6540);const o={},r=s.createContext(o);function u(e){const t=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:u(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);