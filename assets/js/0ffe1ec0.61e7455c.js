"use strict";(self.webpackChunkdocusaurus_temp=self.webpackChunkdocusaurus_temp||[]).push([[1441],{2207:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"Python/PythonforDataScience/Week-7-MachineLearning/European Soccer Regression Analysis using scikit-learn","title":"European Soccer Regression Analysis using scikit-learn","description":"\ud83c\udfe0 Home","source":"@site/docs/Python/PythonforDataScience/Week-7-MachineLearning/European Soccer Regression Analysis using scikit-learn.md","sourceDirName":"Python/PythonforDataScience/Week-7-MachineLearning","slug":"/Python/PythonforDataScience/Week-7-MachineLearning/European Soccer Regression Analysis using scikit-learn","permalink":"/docs/Python/PythonforDataScience/Week-7-MachineLearning/European Soccer Regression Analysis using scikit-learn","draft":false,"unlisted":false,"editUrl":"https://github.com/csjoshc/csjoshc.github.io/tree/main/docs/Python/PythonforDataScience/Week-7-MachineLearning/European Soccer Regression Analysis using scikit-learn.md","tags":[],"version":"current","frontMatter":{}}');var a=s(4848),t=s(8453);const i={},o=void 0,c={},l=[];function d(e){const n={code:"code",em:"em",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"\ud83c\udfe0 Home\n\ud83d\udc0d Python"}),"\n",(0,a.jsx)(n.p,{children:"Regresssion with scikit-learn using Soccer Dataset"}),"\n",(0,a.jsxs)(n.p,{children:["We will again be using the open dataset from the popular site Kaggle that we used in Week 1 for our example.\nRecall that this European Soccer Database has more than 25,000 matches and more than 10,000 players for European professional soccer seasons from 2008 to 2016.\n",(0,a.jsx)(n.strong,{children:"Note:"})," Please download the file ",(0,a.jsx)(n.em,{children:"database.sqlite"})," if you don't yet have it in your ",(0,a.jsx)(n.em,{children:"Week-7-MachineLearning"})," folder."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"import sqlite3\n\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\n\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"# Create your connection.\ncnx = sqlite3.connect('database.sqlite')\ndf = pd.read_sql_query(\"SELECT * FROM Player_Attributes\", cnx)\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"df.head()\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"df.shape\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"df.columns\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"features = [\n       'potential', 'crossing', 'finishing', 'heading_accuracy',\n       'short_passing', 'volleys', 'dribbling', 'curve', 'free_kick_accuracy',\n       'long_passing', 'ball_control', 'acceleration', 'sprint_speed',\n       'agility', 'reactions', 'balance', 'shot_power', 'jumping', 'stamina',\n       'strength', 'long_shots', 'aggression', 'interceptions', 'positioning',\n       'vision', 'penalties', 'marking', 'standing_tackle', 'sliding_tackle',\n       'gk_diving', 'gk_handling', 'gk_kicking', 'gk_positioning',\n       'gk_reflexes']\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"target = ['overall_rating']\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"df = df.dropna()\n"})}),"\n",(0,a.jsx)(n.p,{children:"Extract Features and Target ('overall_rating') Values into Separate Dataframes"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"X = df[features]\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"y = df[target]\n"})}),"\n",(0,a.jsx)(n.p,{children:"Let us look at a typical row from our features:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"X.iloc[2]\n"})}),"\n",(0,a.jsx)(n.p,{children:"Let us also display our target values:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=324)\n"})}),"\n",(0,a.jsx)(n.p,{children:"(1) Linear Regression: Fit a model to the training set"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"regressor = LinearRegression()\nregressor.fit(X_train, y_train)\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"y_prediction = regressor.predict(X_test)\ny_prediction\n"})}),"\n",(0,a.jsx)(n.p,{children:"What is the mean of the expected target value in test set ?"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"y_test.describe()\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"RMSE = sqrt(mean_squared_error(y_true = y_test, y_pred = y_prediction))\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"print(RMSE)\n"})}),"\n",(0,a.jsx)(n.p,{children:"(2) Decision Tree Regressor: Fit a new regression model to the training set"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"regressor = DecisionTreeRegressor(max_depth=20)\nregressor.fit(X_train, y_train)\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"y_prediction = regressor.predict(X_test)\ny_prediction\n"})}),"\n",(0,a.jsx)(n.p,{children:"For comparision: What is the mean of the expected target value in test set ?"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"y_test.describe()\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"RMSE = sqrt(mean_squared_error(y_true = y_test, y_pred = y_prediction))\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"print(RMSE)\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>o});var r=s(6540);const a={},t=r.createContext(a);function i(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);